// This file is part of liblmbcam.
//
// liblmbcam is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// liblmbcam is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with liblmbcam.  If not, see <http://www.gnu.org/licenses/>.

/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamIntRange::cameraHandle() const
 *  ==> see headerfile
 *=======================================================================*/
inline
raw1394handle_t
liblmbcam::FireCamParamIntRange::cameraHandle() const
{
  return _camera->handle();
}

/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamIntRange::cameraNode() const
 *  ==> see headerfile
 *=======================================================================*/
inline
nodeid_t
liblmbcam::FireCamParamIntRange::cameraNode() const
{
  return _camera->node();
}

/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamIntRange::minValueAsInt() const
 *  ==> see headerfile
 *=======================================================================*/
inline
int
liblmbcam::FireCamParamIntRange::minValueAsInt() const
{
  return _min;
}

/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamIntRange::maxValueAsInt() const
 *  ==> see headerfile
 *=======================================================================*/
inline
int
liblmbcam::FireCamParamIntRange::maxValueAsInt() const
{
  return _max;
}

/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamAbsRange::cameraHandle() const
 *  ==> see headerfile
 *=======================================================================*/
inline
raw1394handle_t
liblmbcam::FireCamParamAbsRange::cameraHandle() const
{
  return _camera->handle();
}

/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamAbsRange::cameraNode() const
 *  ==> see headerfile
 *=======================================================================*/
inline
nodeid_t
liblmbcam::FireCamParamAbsRange::cameraNode() const
{
  return _camera->node();
}

/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamAbsRange::minValueAsFloat() const
 *  ==> see headerfile
 *=======================================================================*/
inline
float
liblmbcam::FireCamParamAbsRange::minValueAsFloat() const
{
  return _min;
}

/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamAbsRange::maxValueAsFloat() const
 *  ==> see headerfile
 *=======================================================================*/
inline
float
liblmbcam::FireCamParamAbsRange::maxValueAsFloat() const
{
  return _max;
}

inline
void
liblmbcam::FireCamParamAbsRange::resetValue()
{
  setValue( _val);
}

/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamAutoSwitch::minValueAsInt() const
 *  ==> see headerfile
 *=======================================================================*/
inline
int
liblmbcam::FireCamParamAutoSwitch::minValueAsInt() const
{
  return 0;
}
    
/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamAutoSwitch::maxValueAsInt() const
 *  ==> see headerfile
 *=======================================================================*/
inline
int
liblmbcam::FireCamParamAutoSwitch::maxValueAsInt() const
{
  return 1;
}


/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamAbsSwitch::minValueAsInt() const
 *  ==> see headerfile
 *=======================================================================*/
inline
int
liblmbcam::FireCamParamAbsSwitch::minValueAsInt() const
{
  return 0;
}
    
/*=========================================================================
 *  DESCRIPTION OF FUNCTION:FireCamParamAbsSwitch::maxValueAsInt() const
 *  ==> see headerfile
 *=======================================================================*/
inline
int
liblmbcam::FireCamParamAbsSwitch::maxValueAsInt() const
{
  return 1;
}
